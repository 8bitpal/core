class BankStatement < ActiveRecord::Base

  belongs_to :distributor

  mount_uploader :statement_file, BankStatementUploader

  def process_statement!(distributor, csv, customers)
    file = File.open(csv.path,'r')
    it = 0
    file.each_line("\n") do |line|
      row = line.split(",")
      if row[1].to_i && row[1].to_i > 0
        create_payment!(distributor, row, customers[it.to_s]) unless customers[it.to_s].blank?
      end
      it += 1
    end
  end

  # CSV line format
  # "Date", "Amount", "Payee", "Particulars", "Code", "Reference", "Tran Type"
  private
  def create_payment!(distributor, row, customer_id)
    amount = row[1].to_i
    account = distributor.accounts.where('customer_id = ?', customer_id).first
    account = Account.create!(distributor: distributor, customer: Customer.find(customer_id)) unless account
    Payment.create!(distributor: distributor, account: account, kind: "bank_transfer", description: "Payment generated by CSV import", amount: amount)
  end
end
