#sendEmail.modal.hide.fade{'tabindex' => '-1', 'role' => 'dialog'}
  .modal-header
    %button.close{ data: { dismiss: 'modal'} }
      %i.icon-remove
    %i.icon-envelope
    %span.recipients

  = simple_form_for :email_template, url: email_distributor_customers_path, remote: true do |f|
    = hidden_field_tag :recipient_ids
    = hidden_field_tag :selected_email_template_id, "0"

    .modal-body
      .alert.alert-error
      .alert.alert-info
        = link_to 'javascript:void(0);', class: 'close', 'data-hide' => 'alert-info' do
          %i.icon-remove
        A preview email has been sent to #{current_distributor.email}.

      .row-fluid.composer
        .dropdown.pull-left
          -# = button_tag class: "btn dropdown-toggle", data: { toggle: 'dropdown' } do
          %div.dropdown-toggle{'data-toggle' => 'dropdown'}
            %i.caret
          %ul.dropdown-menu
            %li.template-link-action
              = link_to 'javascript:void(0);' do
                %i.icon-hdd
                Update template
            %li.template-link-action
              = link_to 'javascript:void(0);' do
                %i.icon-trash
                Delete this template
            %li
              = link_to 'javascript:void(0);' do
                %i.icon-plus
                Save as new template
            %li.divider
            - @email_templates.each_with_index do |template, index|
              %li.template-link
                = link_to 'javascript:void(0);' do
                  %i.icon-star
                  = template.subject
                = hidden_field_tag 'subject', template.subject
                = hidden_field_tag 'body', template.body.gsub("\n", "\r")

        = f.input 'subject', label: false, placeholder: "Subject", input_html: { class: 'span12 selected' }, wrapper_html: { class: 'subject' }, autofocus: true
        = f.input 'body', as: :text, label: false, placeholder: "Type in your email template here.", input_html: { class: 'span12', rows: 12 }, wrapper_html: { class: 'body' }

    .modal-footer
      :ruby
        help = <<-HELP
          You can include special keywords between [square brackets] in your email template.
          These keywords will be replaced automatically for each customer:
          <ul><li>#{EmailTemplate::KEYWORDS.join('<li>')}</ul>
        HELP

      = link_to 'javascript:void(0);', class: 'pull-left', title: 'Special keywords', 'data-placement' => 'bottom', 'data-toggle' => 'popover', 'data-content' => help do
        %i.icon-info-sign
        Special keywords

      = link_to 'Cancel', 'javascript:void(0);', class: 'action', 'data-dismiss' => 'modal'
      = link_to 'Preview', 'javascript:void(0);', class: 'action'

      = f.button :submit, 'Send', class: 'btn btn-primary', 'data-loading-text' => "sending...", autocomplete: 'off'

