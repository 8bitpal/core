= simple_form_for(import_transaction_list, url: process_payments_distributor_payment_path(import_transaction_list), :method => :put) do |f|
  - if import_transaction_list.errors.present?
    .row.errors
      = import_transaction_list.errors.full_messages.join(", ")
  .row
    .twelve.columns
      %table.payments
        %thead
          %tr
            %th Date
            %th{width: '350px'} Description
            %th.amount
              %span Amount
            %th Account
            %th Customer
        %tbody
          - import_transaction_list.import_transactions.not_removed.ordered.each do |import_transaction|
            = f.simple_fields_for(:import_transactions, import_transaction) do |tf|
              %tr.row_description{id: "import_transaction_#{import_transaction.id}"}
                = tf.input :id, as: :hidden
                = tf.input :draft, as: :hidden, input_html: {value: false}
                %td= import_transaction.transaction_date.to_s(:transaction)
                %td= import_transaction.description
                %td.amount
                  %span= import_transaction.amount.format
                %td= import_transaction.account
                %td
                  %span{style: "display: inline-block"}= tf.input :customer_id, as: :select, collection: import_transaction.possible_customers, selected: import_transaction.match_id, label: false
                  %span= "*" + "*" * (4 * tf.object.confidence)
              %tr.row_details{style: "display: none;"}
                %td
                %td
                  - import_transaction.raw_data.each do |key, value|
                    %div= "#{key.to_s.humanize}: #{value}"
                %td
                %td
                %td


  .row
    .two.columns.centered
      = link_to "Cancel", distributor_import_transaction_list_path(import_transaction_list), confirm: "This will delete these uploaded transactions", method: :delete
      = f.submit "Save"
