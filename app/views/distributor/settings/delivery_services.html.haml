- title 'Delivery Service Settings', false
- show_settings_sub_nav

#delivery_services
  .delivery_services
    .row-fluid
      .span6
        Your organisation will use one or more Delivery Services to deliver to customers.
        Each of your customers will be assigned to a Delivery Service that best services their location.
      .span6
        %span.heading hint
        It's best to name your Delivery Service according to the geographic region it services e.g. Inner City, Southern Suburbs.
        Customers on Pickup Points will not be asked for their address
        #{link_to "(more info)", 'http://help.buckybox.com/user-manual/setting-up/delivery-services/', target: '_blank'}.

    %table.table.table-condensed.spacer#delivery_services
      %tr
        %td{colspan: 4}
          - first_delivery_service = delivery_services.one?
          = link_to 'javascript:void(0)', class: (first_delivery_service ? 'required-action' : 'action'), 'data-toggle' => 'collapse', 'data-target' => '#new_delivery_service' do
            Create
            = first_delivery_service ? 'your first' : 'a new'
            <strong>Delivery Service</strong>

      - delivery_services.each do |delivery_service|
        - if delivery_service.persisted?
          %tr{ 'data-toggle' => 'collapse', 'data-target' => "#edit_delivery_service_#{delivery_service.id}" }
            %td.name
              %strong= link_to delivery_service.name, 'javascript:void(0)'
              %span.muted= truncate(delivery_service.instructions, length: [70 - delivery_service.name.length, 10].max)
            %td.pickup_point
              - if delivery_service.pickup_point
                %i.icon-map-marker.text-right{ title: "This is a pickup point" }
            %td.days
              = delivery_service.delivery_days
            %td.fee
              %span= delivery_service.formatted_fee

        %tr.edit
          %td{colspan: 4}
            = simple_form_for(delivery_service, url: distributor_settings_delivery_services_path, html: { novalidate: false, class: 'collapse background-yellow' }) do |f|
              = f.hidden_field :id if delivery_service.id
              = f.hidden_field :delete, value: 0

              .container-fluid
                .line
                  = f.input_field :name, class: 'name', required: true, placeholder: 'Delivery Service Name'

                  %span#weekdays.days.text-center
                    = f.simple_fields_for(:schedule_rule) do |schedule_rule_form|
                      - %i(mon tue wed thu fri sat sun).each do |day|
                        = schedule_rule_form.input_field day, inline_label: true, label: "<br><span class='label label-default'>#{day}</span>".html_safe, "data-original-checked" => (delivery_service.public_send(day) ? "checked" : "")

                  = f.input_field :fee, class: 'fee pull-right', required: true, placeholder: '0.00', title: 'Fee'
                .line
                  = f.input_field :instructions, class: 'instructions pull-left', required: true, placeholder: "Delivery Service Details i.e. instructions to customers including area of service for deliveries, estimated delivery or pickup times", rows: 8
                  %span.pickup_point
                    = f.input_field :pickup_point, inline_label: true, label: "<i class='icon-map-marker'></i> This is a <strong>Pickup Point</strong>".html_safe

                .line.clearfix

                .form-actions.pull-right
                  = link_to 'cancel', 'javascript:void(0)', 'data-toggle' => 'collapse', 'data-target' => (delivery_service.new_record? ? "#new_delivery_service" : "#edit_delivery_service_#{delivery_service.id}")

                  - if delivery_service.persisted?
                    &nbsp;
                    - if delivery_service.customers.empty?
                      = link_to_function "delete", "$(this).closest('form').find('input[id=delivery_service_delete]').val(1).closest('form').submit()"
                    - else
                      = link_to 'delete', 'javascript:void(0)', onclick: "alert('You must reassign #{pluralize(delivery_service.customers.count, "customer")} before deleting this delivery service.');"

                  = f.button :submit, 'Save', class: 'btn btn-primary', 'data-conditional-confirm' => "A day has been unchecked. Customer orders on this day will be DELETED. Are you sure?"

