- content_for :product_type do
  .row-fluid
    .span6
      %strong Extra Items
      are value added items that your customers may choose to add to their box during the checkout process.
    .span6
      .label Hint:
      Each of your boxes can be configured individually whether to accept Extra Items or not.

  %table.table.table-condensed.spacer
    %tr
      %td{colspan: 5}
        - first_extra = extras.one?
        = link_to 'javascript:void(0)', class: (first_extra ? 'required-action' : 'action'), 'data-toggle' => 'collapse', 'data-target' => '#new_extra' do
          Create
          = first_extra ? 'your first' : 'a new'
          <strong>Box</strong>

    - extras.each do |extra|
      - unless extra.new_record?
        %tr
          %td
            .photo.pull-left= image_tag(extra.extra_image.tiny_thumb.url, class: "img-circle", 'data-toggle' => 'collapse', 'data-target' => "#edit_extra_#{extra.id}")
          %td
            %strong= link_to extra.name, 'javascript:void(0)', 'data-toggle' => 'collapse', 'data-target' => "#edit_extra_#{extra.id}"
          %td
            = extra.unit
          %td.text-right
            - if extra.visible
              %i.icon-shopping-cart{'data-toggle' => 'tooltip', 'title' => 'Visible on webstore'}
          %td.amount
            = extra.formatted_price

      %tr.edit
        %td{colspan: 5}
          = simple_form_for(extra, url: distributor_settings_products_extras_path, html: { novalidate: false, class: 'collapse in background-yellow' }) do |f|
            = f.hidden_field :id
            .container-fluid
              .row-fluid
                .span2.photo
                  .hidden
                    -# = f.input_field :box_image, as: :file, style: 'display: none'
                    -# = f.input_field :box_image_cache, as: :hidden

                  .text-center= link_to 'update image', 'javascript:void(0)', class: 'upload'
                  -# = image_tag(box.box_image.small_thumb.url, class: 'image-upload')

                .span10.pull-right.fields
                  .row-fuild
                    = f.input_field :name, class: 'name', required: true, placeholder: 'Name'
                    = f.input_field :unit, class: 'unit', required: true, placeholder: 'Unit e.g. 1/2 Doz'
                    = f.input_field :price, class: 'pull-right amount', required: true, placeholder: '0.00', title: 'Price'

                    .line
                      .field= f.input_field :visible, inline_label: true, label: '<i class="icon-shopping-cart"></i> Visible on webstore', as: :boolean

                      .form-actions.pull-right
                        = link_to 'cancel', 'javascript:void(0)', 'data-toggle' => 'collapse', 'data-target' => (extra.new_record? ? "#new_extra" : "#edit_extra_#{extra.id}")
                        = f.button :submit, 'Save', class: 'btn btn-primary'

= render partial: 'distributor/settings/products', locals: { type: 'extras' }

