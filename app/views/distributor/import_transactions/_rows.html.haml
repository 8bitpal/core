- @import_transactions.each do |import_transaction|
  %tr{ class: (import_transaction.matched? ? "row_description matched" : "row_description not_a_customer"), id: "import_transaction_#{import_transaction.id}", 'data-row-id' => import_transaction.id }
    %td= import_transaction.transaction_date.to_s(:transaction)
    %td= truncate(import_transaction.description, length: 70)
    %td.amount{ class: "#{'negative' if import_transaction.amount.negative?}" }= import_transaction.amount.format
    %td= import_transaction.payment_type
    %td{ id: "edit_row_match_#{import_transaction.id}" }
      = render partial: 'distributor/payments/processed_row_detail', locals: {import_transaction: import_transaction}

  %tr.row_details.hidden
    %td
    %td
      - import_transaction.raw_data.each do |key, value|
        %div= "#{key.to_s.humanize}: #{value}"
    %td
    %td
    %td.remove.text-right.text-bottom{ colspan: 2 }
      = link_to("remove transaction", distributor_payment_path(import_transaction), method: :delete, confirm: "This will also reverse any changes made to customer accounts", remote: true, class: "minor-action")
