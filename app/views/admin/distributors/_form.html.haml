= simple_form_for(@distributor, url: [:admin, @distributor], html: { class: 'form-horizontal' }) do |f|
  = f.error_notification

  = f.input :name
  = f.input :contact_name
  = f.input :tag_list, label: 'Tags', placeholder: 'E.g. challenge, delete-me, paying'
  = f.input :parameter_name, label: "..ckybox.com/webstore/"
  = f.input :url
  = f.input :email
  = f.input :support_email
  = f.input :country_id, collection: Country.all, include_blank: false, input_html: { disabled: !@distributor.new_record? }
  = f.input :time_zone, as: :time_zone, input_html: { disabled: !@distributor.new_record? }
  = f.input :currency, collection: select_currencies, include_blank: false, input_html: { disabled: !@distributor.new_record? }

  .input.numeric.currency.optional
    %label.currency.optional{ for: 'distributor_consumer_delivery_fee' } Consumer delivery fee
    %input#distributor_consumer_delivery_fee.numeric.currency.optional{ name: 'distributor[consumer_delivery_fee]', step: 'any', type: 'number', value: @distributor.consumer_delivery_fee }
    %span
      %strong#currency_code= @distributor.currency.upcase

  = f.input :separate_bucky_fee
  = f.input :bank_deposit
  = f.input :paypal
  = f.input :bank_deposit_format, collection: ImportTransactionList::FILE_FORMATS.reject { |name, code| code == 'paypal' }, as: :select
  = f.input :invoice_threshold
  = f.input :active_webstore
  = f.input :customer_can_remove_orders
  = f.input :feature_spend_limit, label: 'Enable the minimum balance feature?', hint: 'This gives the distributor the option to turn on a minimum balance for customers.'
  = f.input :send_email, as: :boolean, label: "Send any emails to customers?"

  %hr

  = f.input :password
  = f.input :password_confirmation, hint: 'Only changed if both are set'

  .form-actions
    = f.button :submit, id: @distributor.new_record? ? '' : "edit_distributor_submit"
