= simple_form_for(@distributor, url: [:admin, @distributor], html: { class: 'form-horizontal' }) do |f|
  = f.error_notification

  = f.input :name
  = f.input :parameter_name, label: "..ckybox.com/webstore/"
  = f.input :url
  = f.input :email
  = f.input :support_email
  = f.input :country_id, collection: Country.all, include_blank: false, input_html: { disabled: !@distributor.new_record? }
  = f.input :time_zone, as: :time_zone, input_html: { disabled: !@distributor.new_record? }
  = f.input :currency, collection: select_currencies, include_blank: false, input_html: { disabled: !@distributor.new_record? }

  .input.numeric.currency.optional
    %label.currency.optional{ for: 'distributor_consumer_delivery_fee' } Consumer delivery fee
    %input#distributor_consumer_delivery_fee.numeric.currency.optional{ name: 'distributor[consumer_delivery_fee]', step: 'any', type: 'number', value: @distributor.consumer_delivery_fee }
    %span
      %strong#currency_code= @distributor.currency.upcase

  = f.input :separate_bucky_fee
  = f.input :bank_deposit
  = f.input :paypal
  = f.input :bank_deposit_format, collection: ImportTransactionList::FILE_FORMATS.reject { |name, code| code == 'paypal' }, as: :select
  = f.input :invoice_threshold
  = f.input :active_webstore
  = f.input :has_balance_threshold
  #balance_threshold{style: @distributor.has_balance_threshold? ? '' : 'display: none'}
    = f.input :default_balance_threshold, hint: "Account balances below this will put customers into a halted state.  No orders will be fulfilled while halted."

  %hr

  = f.input :password
  = f.input :password_confirmation, hint: 'Only changed if both are set'

  .form-actions
    = f.button :submit
