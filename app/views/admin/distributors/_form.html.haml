= simple_form_for(@distributor, url: [:admin, @distributor], html: { class: 'form-horizontal' }) do |f|
  = f.error_notification

  %fieldset
    %legend Profile
    = f.input :name
    = f.input :contact_name
    = f.input :addons, placeholder: 'e.g. labels,delivery,packing', input_html: { disabled: @distributor.api_key.blank? }
    = f.input :tag_list, label: 'Tags', placeholder: 'e.g. challenge, delete-me, paying'
    = f.input :overdue
    = f.input :notes, row: 2
    = f.input :parameter_name
    = f.input :url
    = f.input :email
    = f.input :support_email
    = f.input :ga_tracking_id, label: "GA tracking ID", placeholder: "e.g. UA-21417656-5"
    = f.input :country_id, collection: Country.all, include_blank: false, input_html: { disabled: !@distributor.new_record? }
    = f.input :time_zone, as: :time_zone, input_html: { disabled: !@distributor.new_record? }
    = f.input :currency, collection: select_currencies, include_blank: false, input_html: { disabled: !@distributor.new_record? }
    = f.input :locale, collection: I18n.available_locales, include_blank: false

  %fieldset
    %legend Preferences
    .input.numeric.currency.optional
      %label.currency.optional{ for: 'distributor_consumer_delivery_fee' } Consumer delivery fee
      %input#distributor_consumer_delivery_fee.numeric.currency.optional{ name: 'distributor[consumer_delivery_fee]', step: 'any', type: 'number', value: @distributor.consumer_delivery_fee }
      %span
        %strong#currency_code= @distributor.currency.upcase

    = f.input :separate_bucky_fee
    = f.association :omni_importers, collection: OmniImporter.all, label_method: :select_label, hint: "Once selected and saved, this will override the old import formats presented to the distributor on the payments screen."
    :javascript
      $(function(){$("#distributor_omni_importer_ids").select2({ width: 'resolve' });});

    = f.input :customer_can_edit_orders
    = f.input :customer_can_remove_orders
    = f.input :feature_spend_limit, label: 'Enable the minimum balance feature?', hint: 'This gives the distributor the option to turn on a minimum balance for customers.'
    = f.input :send_email, as: :boolean, label: "Send any emails to customers?"

  %fieldset
    %legend Notifications
    = f.input :notify_address_change, label: "Notify distributor when a customers address is changed"
    = f.input :notify_for_new_webstore_customer, as: :boolean, input_html: {disabled: true}
    = f.input :notify_for_new_webstore_order

  %fieldset
    %legend New Orders
    = f.input :email_customer_on_new_webstore_order, label: "When customer makes an order send email"
    = f.input :email_customer_on_new_order, label: "When distributor creates an order also send email"
    = f.input :email_distributor_on_new_webstore_order, label: "Send a copy of email to distributor when customer makes order"

  %fieldset
    %legend Web Store
    = f.input :active_webstore
    = f.input :payment_cash_on_delivery, label: 'Allow cash on delivery'
    = f.input :payment_bank_deposit, label: 'Allow bank deposit payments'
    =# f.input :payment_credit_card, label: 'Allow credit card payments'

    %hr{style: 'border-style: dashed'}
    .row
      .span3
        = f.input :collect_phone
      .span3
        = f.input :require_phone
    .row
      .span3
        = f.input :collect_address_1, as: :fake_boolean, disabled: true, input_html: { checked: true }
      .span3
        = f.input :require_address_1
    .row
      .span3
        = f.input :collect_address_2, as: :fake_boolean, disabled: true, input_html: { checked: true }
      .span3
        = f.input :require_address_2
    .row
      .span3
        = f.input :collect_suburb, as: :fake_boolean, disabled: true, input_html: { checked: true }
      .span3
        = f.input :require_suburb
    .row
      .span3
        = f.input :collect_city, as: :fake_boolean, disabled: true, input_html: { checked: true }
      .span3
        = f.input :require_city
    .row
      .span3
        = f.input :collect_postcode, as: :fake_boolean, disabled: true, input_html: { checked: true }
      .span3
        = f.input :require_postcode
    .row
      .span3
        = f.input :collect_delivery_note
      .span3
        = f.input :require_delivery_note

  %fieldset
    %legend Change Password
    = f.input :password
    = f.input :password_confirmation, hint: 'Only changed if both are set'

  .form-actions
    = f.button :submit, id: @distributor.new_record? ? '' : "edit_distributor_submit"
