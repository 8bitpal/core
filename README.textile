h1. Bucky Box

"Itâ€™s your operations team for your organic deliveries...":http://www.buckybox.com/

h2. Git Strategy

Currently following "this git branching and merging strategy.":http://scottchacon.com/2011/08/31/github-flow.html

For a video version here is a "recorded presentation":http://youtu.be/MQZoy3VU3io?hd=1

If you have any questions ask Samson.

h3. Staging

Occasionally, staging gets a little messy. If the team is ok with it (nothing else is being tested) you can reset staging 
so it is the same as master again before you merge in your feature branch for testing using:

@git checkout staging@
@git reset --hard origin/master@

h2. Best Practices

* Don't commit commented out code (actual comments are fine). That is what version control is for.
* Don't throw random javascript in pages, we are moving towards a Javascript MVC framework.
* Don't use @&nbsp;@ for spacing. Use CSS padding or margin instead.
* Where possible use an options API for methods calls to improve code readability
** Use this API @def find_by_id_and_process(id, options = {})@ for this call @find_by_id_and_process(3, :with_totals => true, :skip_empty => false)@
** Don't use this API @def find_by_id_and_process(id, with_totals = true, skip_empty = false)@ for this call @find_by_id_and_process(3, true, false)@


h2. Replace Staging Data With Production Data

bc. taps server postgres://bucky_box:[production_db_password]@localhost/bucky_box_production user [random_password]

bc. taps pull postgres://bucky_box:[staging_db_password]@localhost/bucky_box_staging http://user:[random_password]@my.buckybox.com:5000
