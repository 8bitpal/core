# nginx_conf v1
worker_processes 4; # 1 worker per available core
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # leave as-is
}

http {
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  passenger_root /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.13; # has corresponding version in the passenger package
  passenger_ruby /usr/local/bin/ruby_tuned;
  #PRODUCTION
  passenger_max_pool_size 4; # hard limit for max passengers (can be changed if memory available)
  passenger_max_instances_per_app 4; # should match max_pool_size unless multiple apps running
  #PRODUCTION
  #STAGING
  passenger_max_pool_size 4; # hard limit for max passengers (can be changed if memory available)
  passenger_max_instances_per_app 4; # should match max_pool_size unless multiple apps running
  #STAGING
  passenger_pool_idle_time 0;
  rails_app_spawner_idle_time 0;
  rails_framework_spawner_idle_time 0;
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 165;

  log_format  main  '$remote_addr - $remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for';

  gzip on;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_disable "MSIE [1-6]\.";
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  server_names_hash_bucket_size 128;
  
  # SSL REDIRECT
  server {
      listen      80;
      #PRODUCTION
      server_name my.buckybox.com;
      #PRODUCTION
      #STAGING
      server_name staging.buckybox.com;
      #STAGING
      return 301 https://$server_name$request_uri;
  }
# when adding new apps, make sure to rotate any log files they might generate
  server {
    listen 443;

    # SSL
    ssl on;
    #PRODUCTION
    ssl_certificate /etc/ssl/certs/ssl-bundle.crt;
    ssl_certificate_key /etc/ssl/private/buckybox_com.key;
    #PRODUCTION
    #STAGING
    ssl_certificate /etc/ssl/certs/ssl-bundle.crt;
    ssl_certificate_key /etc/ssl/private/buckybox_com.key;
    #STAGING
    #enables SSLv3/TLSv1, but not SSLv2 which is weak and should no longer be used.
    ssl_protocols SSLv3 TLSv1;
    #Disables all weak ciphers
    ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;
    # SSL DONE

    root /home/buckybox/#{RAILS_ENV}/current/public;
    passenger_enabled on;
    passenger_use_global_queue on;
    rack_env #{RAILS_ENV};
    client_max_body_size 10M;

    # CORS support for cross-domain AJAX
    location ~ ^/assets/sign_up_wizard {
      if ($http_origin ~ "^https?://.*\.buckybox\.com$") {
        # allow only our sub-domains for now (namely "staging", "my" and "misspiggy")
        add_header Access-Control-Allow-Origin $http_origin;
      }
    }

# serve static files without running more rewrite tests
    if (-f $request_filename) {
      break;
    }
# expires headers
    location ~* \.(ico|css|js|gif|jp?g|png)(\?[0-9]+)?$ {
      expires max;
      break;
    }
# disable site via capistrano (cap deploy:web:disable)
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
  }

  server {
    listen 80;
    #PRODUCTION
    server_name munin.buckybox.com;
    #PRODUCTION
    #STAGING
    server_name staging.munin.buckybox.com;
    #STAGING
    root /var/cache/munin/www;
    
    access_log /var/log/nginx/munin_access.log;
    error_log /var/log/nginx/munin_error.log;
  }

  include /usr/local/nginx/sites-enabled/*;
}
